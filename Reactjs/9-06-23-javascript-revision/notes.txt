Javascript Engine 
1.Execution context 
2.Stack 
3.heap
4.callback queue 
5.web api 
6.Global execution context 
7.Scope 
8.this keyword 
9.normal function and arrow function 
10.Event loop 
============================
Engine - v8 
Javascript is interpreter language 
interpreter - line by line execution
source code --interpreter -- byte code 
JIT - Just in time compiler 
=======================================
call stack - code will get executed 
execution context is created for each function that will run inside the call stack.
heap - array and object will get store.
javascript is non blocking and it will do multitasking
=================================================
Global execution context 
//outside function whatever is declared 
//function declarations
//this keyword refer window object 
======================================================
Execution context 
1.Variable Environment 
   //let,const,var 
   //function,object 
   //arguments 
2.scope chain 
    //any variable if you want to access outside this function will have access or not 
3.this keyword 

All function will have execution context 
But in arrow function will have execution context but we dont' have own this keyword it will borrow from parent function.
=================================================================
